#include <stdio.h>
#include <string.h>
#include "stm32f1xx_hal.h"         // STM32 시리즈에 맞게 수정할 것
#include "stm32f1xx_hal_uart.h"    // UART 핸들 타입 정의 포함
#include "task.h"
#include "main.h"

QueueHandle_t uartQueueHandle;     // FreeRTOS에서 사용하는 큐 핸들 타입

extern UART_HandleTypeDef husart3; // 다른 파일에서 정의된 UART 핸들 사용

// 태스크 함수 원형 선언
void UARTTask(void *argument);
void HC12ComSERIALTask(void *argument);


void systemTaskInit(void)
{
  // UARTTask 생성
  xTaskCreate(UARTTask,
              "UARTTask",
              128,
              NULL,
              tskIDLE_PRIORITY + 1,
              NULL);

  // HC12ComSERIALTask 생성
  xTaskCreate(HC12ComSERIALTask,
              "HC12ComSERIALTask",
              128,
              NULL,
              tskIDLE_PRIORITY + 1,
              NULL);
}

void UARTTask(void *argument)
{
    uint32_t msg;
    char txBuffer[32];

    for (;;)
    {
        if (osMessageQueueGet(uartQueueHandle, &msg, NULL, osWaitForever) == osOK)
        {
            sprintf(txBuffer, "Received: %lu\r\n", msg);
            HAL_UART_Transmit(&husart3, (uint8_t *)txBuffer, strlen(txBuffer), HAL_MAX_DELAY);
        }
    }
}

void HC12ComSERIALTask(void *argument)
{
    for (;;)
    {
        printf("HC-12 TASK\r\n");
        osDelay(1000);
    }
}
